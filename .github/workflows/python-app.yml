# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Poetry App

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ./example-app
        shell: bash

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.3
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
    - name: Install dependencies
      run: |
        poetry install --no-root
    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/work/iac-labs/iac-labs/example-app/.venv
        key: ${{ runner.os }}-venv
  poetry-app-lint:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.ref }}
    defaults:
      run:
        working-directory: ./example-app
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.3
      - name: Load cache
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: /home/runner/work/iac-labs/iac-labs/example-app/.venv
          key: ${{ runner.os }}-venv
      - name: Poetry app lint
        run: |
            source $VENV 
            poetry run task lint
  poetry-app-formatter:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.ref }}
    defaults:
      run:
        working-directory: ./example-app
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.3
      - name: Load cache
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: /home/runner/work/iac-labs/iac-labs/example-app/.venv
          key: ${{ runner.os }}-venv
      - name: Poetry app formatter
        run: |
            source $VENV 
            poetry run task formatter
  poetry-app-security:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.ref }}
    defaults:
      run:
        working-directory: ./example-app
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.3
      - name: Load cache
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: /home/runner/work/iac-labs/iac-labs/example-app/.venv
          key: ${{ runner.os }}-venv
      - name: Poetry app security
        run: |
            source $VENV 
            poetry run task security
  poetry-app-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app
    needs: ['poetry-app-lint', 'poetry-app-formatter', 'poetry-app-security']
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.3
      - name: Load cache
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: /home/runner/work/iac-labs/iac-labs/example-app/.venv
          key: ${{ runner.os }}-venv
      - name: Poetry app test
        run: |
            source $VENV       
            poetry run task test

